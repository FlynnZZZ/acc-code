MVC 模式
  Model,模型层:      提供/保存数据
  Controller,控制层: 数据处理,实现业务逻辑
  View,视图层:       展示数据,提供用户界面
MVVM 模式
  PS：用 View Model 代替 Controller.
    本质：view 绑定 view-model,视图与数据模型强耦合,
    数据的变化实时反映在 view 上,不需要手动处理.
  Model
  View
  View-Model：简化的 Controller,唯一作用就是为 View 提供处理好的数据,不含其他逻辑。
SPA, Single-page application
  前端可以做到： 读写数据 切换视图 用户交互
  这意味着,网页其实是一个应用程序。
  2010 年后,前端工程师从开发页面,变成了开发”前端应用“（跑在浏览器里面的应用程序）。
Native App  是一种基于智能手机本地操作系统并使用原生程式编写运行的第三方应用程序
  如iOS、Android、WP系统,也叫本地app。
  一般使用的开发语言为JAVA、C++、Objective-C。
静态页面和动态页面 
  动态页面 : 通过数据库进行架构的网站。
    动态网站除了要设计网页外,还要通过数据库和编程序来使网站具有更多自动的和高级的功能。
    例如,网站里的产品资料和图片数量很多、种类很多,
    为方便顾客查找,就应通过数据库编程来在网页上实现自动搜索；
    系统、在线采购系统、商务交流系统等都是用数据库来做成的
    一般使用PHP ASP JSP 等制作
    动态网页则更新较多,一般用于用户互动较多的网站
  静态网站: 主要是指由静态网站制作而成的网站。
    也可以简单的这样理解：动态网站的功能就是 想填加一条信息,只要登陆会员或者网站管理后台。
    然后像发电子邮件一样,填表单提交后, 网站前台就能显示了,就已经更新完毕了
    静态的需要用FTP或者WEBFTP从服务器上把需要更新的文件下载到本地修改后再上传。
    运行在客户端的程序、网页、插件、组件 属于静态网页,可以脱离服务器运行于浏览器客户端
    静态网页适合更新较少的网站,一般适用于展示型的网站
  区分 : 最简单的方法就是看后缀
    态网页网址中有两个标志性的符号“?”和“&”（有的可能没有&）,?和&就是用来带参数的,
    现在几乎所有的网页都是动态网页。
'eXtensible Markup Language'XML,可扩展标记语言 

动画 
  实现方式 
    JavaScript 通过定时器刷新,间隔来改变元素样式。
    CSS3 transition和animation。
    HTML5 使用HTML5提供的绘图方式：
  绘制频率 
    页面每一帧变化都是系统绘制出来的（GPU或者CPU）。
    它的最高绘制频率受限于显示器的刷新频率（而非显卡）, 
    所以大多数情况下最高的绘制频率只能是每秒60帧,对应于显示器的60Hz
    帧,frame per second,简称fps;
  刷新频率
    图像在屏幕上更新的速度,也就是屏幕上的图像每秒出现的次数,单位是Hz,
    刷新频率越高,屏幕上图片闪烁感就越小,稳定性也就越高。
    人的眼睛不容易察觉75Hz以上刷新频率带来的闪烁感。
  硬件加速
    硬件有三个处理器：CPU、GPU和APU（声音处理器）。他们通过PCI/AGP/PCIE总线交换数据。
    GPU在浮点运算、并行计算等部分计算方面,明显高于CPU的性能。
  fps 
    GPU渲染画面的频率, 游戏里谈到掉帧,是指GPU渲染画面频率降低。
    比如跌落到30fps甚至20fps,但因为视觉暂留原理,我们看到的画面仍然是运动和连贯的。
  Hz
    显示器刷新屏幕的频率
