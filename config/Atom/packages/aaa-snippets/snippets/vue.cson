# vue  .vue ------------------------------------------------------------------- 
'.text.html.basic,.text.html.vue': 
  '-vue v-if':
    'prefix': 'vif'
    'body': 'v-if="${1:key}"' 
  '-vue v-else-if':
    'prefix': 'v-else-if'
    'body': 'v-else-if="${1:key}"' 
  '-vue v-else':
    'prefix': 'v-else'
    'body': 'v-else'
  '-vue v-show':
    'prefix': 'v-show'
    'body': 'v-show="${1:key}"' 
  '-vue v-for':
    'prefix': 'v-for'
    'body': 'v-for="(val,key) in list"' 
  '-vue v-text':
    'prefix': 'v-text'
    'body': 'v-text="${1:key}"' 
  '-vue v-html':
    'prefix': 'v-html'
    'body': 'v-html="${1:key}"' 
  '-vue v-model':
    'prefix': 'v-model'
    'body': 'v-model="${1:key}"'
  '-vue v-bind':
    'prefix': 'v-bind'
    'body': ':${1:class}="${2:arg}"'
  '-vue v-on':
    'prefix': 'v-on'
    'body': '@${1:click}="${2:arg}"' 
  '-vue v-once':
    'prefix': 'v-once'
    'body': """v-once""" 
  '-vue v-cloak':
    'prefix': 'v-cloak'
    'body': """v-cloak""" 
  '-vue v-pre':
    'prefix': 'v-pre'
    'body': """v-pre""" 
  '-vue slot="$1"':
    'prefix': 'slot-vue'
    'body': 'slot="$1"' 
  '-vue scope="$1"':
    'prefix': 'scope-vue'
    'body': 'scope="$1"' 
  '-vue inline-template="$1"':
    'prefix': 'inline-template-vue'
    'body': 'inline-template="$1"' 
  '-vue is="$1"':
    'prefix': 'is-vue'
    'body': 'is="$1"' 
  '-vue <keep-alive>$1</keep-alive>':
    'prefix': 'keep-alive'
    'body': '<keep-alive>$1</keep-alive>'
  '-vue to="$1"':
    'prefix': 'to-vue'
    'body': 'to="$1"'
  '-vue ref="$1"':
    'prefix': 'ref-vue'
    'body': 'ref="$1"'
  '-vue scoped':
    'prefix': 'scoped-vue'
    'body': 'scoped'
  '-vue text/x-template':
    'prefix': 'text/x-template-vue'
    'body': '"text/x-template"'
'.source.js,.text.html.vue':
  '-Vue.extend({});  扩展Vue构造器':
    'prefix': 'vue-extend'
    'body': """Vue.extend({
        $1
      });""" 
  '-Vue.component("c-name",{})  全局组件':
    'prefix': 'vue-component'
    'body': """Vue.component('c-name',{
      template: ''
      ,props: []
      ,props: {
        prop0: {
          default: xxx
          default: function () {
            return 
          }
          ,type: Number 
          ,required: bol  
          ,validator: function (val) { 
            return bol;
          }
        }
        ,prop1: Number 
        ,prop1: [Number,String] 
      }
      ,data: function(){
        return {
          
        }
      }
      ,created: function(){
      }
    });""" 
  '-Vue.component("c-name",foo)  异步全局组件':
    'prefix': 'vue-component-async'
    'body': """Vue.component("c-name",function(rs,rj){
      rs({
        template: ''
        ,props: []
        ,props: {
          prop0: {
            default: xxx
            default: function () {
              return 
            }
            ,type: Number 
            ,required: bol  
            ,validator: function (val) { 
              return bol;
            }
          }
          ,prop1: Number 
          ,prop1: [Number,String] 
        }
        ,data: function(){
          return {
            
          }
        }
        ,created: function(){
        }
      })
    });""" 
  '-Vue.directive("xx-xx",{});  全局指令':
    'prefix': 'vueDirective'
    'body': """Vue.directive('xxx-xxx', {
      bind : function(el,binds,vn){
        // binds{name,value,expression,arg,modifiers}
      }
      ,inserted : function(el,binds,vn){
        
      }
      ,update : function(el,binds,vn,oVn){
        // binds{name,value,expression,arg,modifiers,oldValue}
      }
      ,componentUpdated : function(el,binds,vn,oVn){
        // binds{name,value,expression,arg,modifiers,oldValue}
      }
      ,unbind : function(el,binds,vn,oVn){
        
      }
    });""" 
  '-Vue.filter("xxx",foo);  全局过滤器':
    'prefix': 'vue-filter'
    'body': """Vue.filter('xxx',function(val,arg2,arg3){
        $1 
      });""" 
  '-Vue.use($1)':
    'prefix': 'vue-use'
    'body': 'Vue.use($1)'
  '-vue new Vue({$1});':
    'prefix': 'new-vue'
    'body': """new Vue({
        el: '#xxx'
        ,data: {}
        ,computed: {}
        ,watch: {}
        ,methods: {}
        ,created: function (){
          var that = this;
        }
        ,mounted: function (){
          var that = this;
          this.$nextTick(function () { });
          
        }
      });""" 
  '-vue new VueRouter();':
    'prefix': 'new-VueRouter'
    'body': """new VueRouter({
        routes : $1
      });""" 
  '-vue props':
    'prefix': 'props-vue'
    'body': """props""" 
  '-vue propsData':
    'prefix': 'propsData-vue'
    'body': """propsData""" 
  '-vue computed':
    'prefix': 'computed-vue'
    'body': """computed""" 
  '-vue watch':
    'prefix': 'watch-vue'
    'body': """watch""" 
  '-vue methods':
    'prefix': 'methods-vue'
    'body': """methods""" 
  '-vue filters':
    'prefix': 'filters-vue'
    'body': """filters""" 
  '-vue directives':
    'prefix': 'directives-vue'
    'body': """directives""" 
  '-vue mixins':
    'prefix': 'mixins-vue'
    'body': """mixins""" 
  '-vue components':
    'prefix': 'components-vue'
    'body': """components""" 
  '-vue beforeCreate  实例刚创建':
    'prefix': 'beforeCreate-vue'
    'body': """beforeCreate""" 
  '-vue created  实例创建完毕':
    'prefix': 'created-vue'
    'body': """created""" 
  '-vue beforeMount  DOM渲染前':
    'prefix': 'beforeMount-vue'
    'body': """beforeMount""" 
  '-vue mounted  DOM渲染完毕':
    'prefix': 'mounted-vue'
    'body': """mounted""" 
  '-vue beforeUpdate  更新前':
    'prefix': 'beforeUpdate-vue'
    'body': """beforeUpdate""" 
  '-vue updated  数据模型更新':
    'prefix': 'updated-vue'
    'body': """updated""" 
  '-vue activated  组件被激活时':
    'prefix': 'activated-vue'
    'body': """activated""" 
  '-vue deactivated  组件被移除时':
    'prefix': 'deactivated-vue'
    'body': """deactivated""" 
  '-vue beforeDestroy  销毁前':
    'prefix': 'beforeDestroy-vue'
    'body': """beforeDestroy""" 
  '-vue destroyed  销毁观察、组件及事件':
    'prefix': 'destroyed-vue'
    'body': """destroyed""" 
  '-vue .$set(obj,key,val)':
    'prefix': 'set-vue'
    'body': """$set(obj,key,val)""" 
  '-vue .$emit("eventName",data)':
    'prefix': 'emit-vue'
    'body': """$emit('eventName',data)""" 
  '-vue .$on("eventName",function (){})':
    'prefix': 'on-vue'
    'body': """$on('eventName',function (data){
      $1
    })""" 
  '-vue .$refs':
    'prefix': 'refs-vue'
    'body': """$refs""" 
  # 插件 
  '-vue $http.get().then':
    'prefix': 'http.get'
    'body': """$http.get('url',{})  // 某接口
    .then(function(data){
      console.log('某接口--成功',data)
    },
    function(error){
      console.log('某接口--失败',error)
    })""" 
  '-vue $http.post().then':
    'prefix': 'http.post'
    'body': """$http.post('url',{})  // 某接口
    .then(function(data){
      console.log('某接口--成功',data)
    },
    function(error){
      console.log('某接口--失败',error)
    })""" 
'.text.html.vue':
  # html------------------------------------------------------------------------
  '-vue <template>$1</template>':
    'prefix': 'template'
    'body': '<template>$1</template>' 
  '-vue <router-view></router-view>':
    'prefix': 'router-view'
    'body': '<router-view>$1</router-view>' 
  '-vue <router-link></router-link>':
    'prefix': 'router-link'
    'body': '<router-link>$1</router-view>' 
  '-vue lang=':
    'prefix': 'lang'
    'body': """lang=\"$1\"""" 
  '-vue <template> ...':
    'prefix': 'template package'
    'body': """
    <template lang="html">
      $1
    </template>
    <script>
    export default {
    }
    </script>
    <style lang="css" scoped>
    </style>
    """
  # css-------------------------------------------------------------------------
  # js--------------------------------------------------------------------------


