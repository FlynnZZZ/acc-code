# DOM .js --------------------------------------------------------------------- 
'.source.js':
  # window -------------------------------------
  '-DM setTimeout(${1:funName},${2:time})':
    'prefix': 'setTimeout'
    'body': 'setTimeout(${1:funName},${2:1000})'
  '-DM setInterval(${1:funName},${2:time})':
    'prefix': 'setInterval'
    'body': 'setInterval(${1:funName},${2:1000})'
  # elem -------------------------------------
  '-DM .cloneNode(bool)':
    'prefix': 'cloneNode'
    'body': 'cloneNode($1)'
  '-DM .createElement("$1")':
    'prefix': 'createElement'
    'body': 'createElement("$1")'
  '-DM .parentElement':
    'prefix': 'parentElement'
    'body': 'parentElement'
  '-DM .innerHTML("$1")':
    'prefix': 'innerHTML'
    'body': 'innerHTML("$1")'
  '-DM .innerText("$1")':
    'prefix': 'innerText'
    'body': 'innerText("$1")'
  '-DM .insertAdjacentHTML("${1:beforeend}",html)':
    'prefix': 'insertAdjacentHTML'
    'body': 'insertAdjacentHTML("${1:beforeend}",html)'
  '-DM .querySelector("$1")':
    'prefix': 'querySelector'
    'body': 'querySelector("$1")'
  '-DM .querySelectorAll("$1")':
    'prefix': 'querySelectorAll'
    'body': 'querySelectorAll("$1")'
  '-DM .getAttribute("$1")':
    'prefix': 'getAttribute'
    'body': 'getAttribute("$1")'
  '-DM .setAttribute("$1","$2")':
    'prefix': 'setAttribute'
    'body': 'setAttribute("$1","$2")'
  # event ------------------------------------
  '-DM touchstart':
    'prefix': 'touchstart'
    'body': 'touchstart'
  '-DM touchend':
    'prefix': 'touchend'
    'body': 'touchend'
  '-DM touchmove':
    'prefix': 'touchmove'
    'body': 'touchmove'
  '-DM readystatechange':
    'prefix': 'readystatechange'
    'body': 'readystatechange'
  '-DM .addEventListener("",foo)':
    'prefix': 'addEventListener'
    'body': """addEventListener("${1:click}",function(e){
      $2
    })
    """
  '-DM .preventDefault()':
    'prefix': 'preventDefault'
    'body': 'preventDefault()'
  '-DM .stopPropagation()':
    'prefix': 'stopPropagation'
    'body': 'stopPropagation()'
  '-DM pageX':
    'prefix': 'pageX'
    'body': 'pageX'
  '-DM pageY':
    'prefix': 'pageY'
    'body': 'pageY'
  '-DM currentTarget':
    'prefix': 'currentTarget'
    'body': """currentTarget""" 
  # canvas 
  # FileReader 
  '-DM .readAsDataURL()':
    'prefix': 'readAsDataURL'
    'body': """readAsDataURL($1)"""
  # 
  '-DM .readAsBinaryString':
    'prefix': 'readAsBinaryString'
    'body': 'readAsBinaryString'
  '-DM .readAsArrayBuffer':
    'prefix': 'readAsArrayBuffer'
    'body': 'readAsArrayBuffer'
  '-DM .readAsText':
    'prefix': 'readAsText'
    'body': 'readAsText'

